// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// GibbsC
NumericMatrix GibbsC(int n, int a, int b);
RcppExport SEXP _StatComp21026_GibbsC(SEXP nSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(GibbsC(n, a, b));
    return rcpp_result_gen;
END_RCPP
}
// equalCovs_C
Eigen::Vector2d equalCovs_C(Eigen::MatrixXd sam1, Eigen::MatrixXd sam2);
RcppExport SEXP _StatComp21026_equalCovs_C(SEXP sam1SEXP, SEXP sam2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type sam1(sam1SEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type sam2(sam2SEXP);
    rcpp_result_gen = Rcpp::wrap(equalCovs_C(sam1, sam2));
    return rcpp_result_gen;
END_RCPP
}
// equalCovs_Matrix
Eigen::Vector2d equalCovs_Matrix(Eigen::MatrixXd sam1, Eigen::MatrixXd sam2);
RcppExport SEXP _StatComp21026_equalCovs_Matrix(SEXP sam1SEXP, SEXP sam2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type sam1(sam1SEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type sam2(sam2SEXP);
    rcpp_result_gen = Rcpp::wrap(equalCovs_Matrix(sam1, sam2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_StatComp21026_GibbsC", (DL_FUNC) &_StatComp21026_GibbsC, 3},
    {"_StatComp21026_equalCovs_C", (DL_FUNC) &_StatComp21026_equalCovs_C, 2},
    {"_StatComp21026_equalCovs_Matrix", (DL_FUNC) &_StatComp21026_equalCovs_Matrix, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_StatComp21026(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
